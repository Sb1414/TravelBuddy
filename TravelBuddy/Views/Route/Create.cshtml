@model TravelBuddy.Models.UserRoute
@{
    ViewData["Title"] = "Создать маршрут";
}

<h2>Создать маршрут</h2>

<form asp-action="Create" method="post" class="form-row">
    @Html.AntiForgeryToken()
    
    <div class="form-group">
        <label asp-for="RouteName"></label>
        <input asp-for="RouteName" class="form-control" />
    </div>

    <div id="stops-container">
        <!-- Контейнер для остановок маршрута -->
        <h4>Остановки</h4>
        <div class="stop-fields">
            <label>Город назначения</label>
            <input type="text" name="RouteStops[0].DestinationCity" class="form-control city-autocomplete" />

            <label>Средство передвижения</label>
            <select name="RouteStops[0].Transportation" class="form-control">
                <option value="Машина">Машина</option>
                <option value="Самолет">Самолет</option>
                <option value="Поезд">Поезд</option>
                <option value="Автобус">Автобус</option>
            </select>

            <label>Время пребывания</label>
            <input type="number" name="RouteStops[0].Duration" class="form-control" />

            <label>Тип времени</label>
            <select name="RouteStops[0].DurationType" class="form-control">
                <option value="Дни">Дни</option>
                <option value="Часы">Часы</option>
            </select>
        </div>
    </div>

    <button type="button" id="add-stop-btn" class="btn btn-secondary mt-3">+ Добавить остановку</button>
    <button type="submit" class="btn btn-primary mt-3">Создать маршрут</button>
</form>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://code.jquery.com/ui/1.13.1/jquery-ui.min.js"></script>
    <link rel="stylesheet" href="https://code.jquery.com/ui/1.13.1/themes/base/jquery-ui.css" />

    <script>
        let stopCount = 1;        
        // Функция для добавления новой остановки
        document.getElementById('add-stop-btn').addEventListener('click', function () {
            const stopsContainer = document.getElementById('stops-container');
            const stopHtml = `
                <div class="stop-fields mt-3">
                    <label>Город назначения</label>
                    <input type="text" name="RouteStops[${stopCount}].DestinationCity" class="form-control city-autocomplete" />

                    <label>Средство передвижения</label>
                    <select name="RouteStops[${stopCount}].Transportation" class="form-control">
                        <option value="Машина">Машина</option>
                        <option value="Самолет">Самолет</option>
                        <option value="Поезд">Поезд</option>
                        <option value="Автобус">Автобус</option>
                    </select>

                    <label>Время пребывания</label>
                    <input type="number" name="RouteStops[${stopCount}].Duration" class="form-control" />

                    <label>Тип времени</label>
                    <select name="RouteStops[${stopCount}].DurationType" class="form-control">
                        <option value="Дни">Дни</option>
                        <option value="Часы">Часы</option>
                    </select>
                </div>`;
            stopsContainer.insertAdjacentHTML('beforeend', stopHtml);
            stopCount++;
        });
                
        $(function () {
            $(".city-autocomplete").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: "http://api.openweathermap.org/geo/1.0/direct",
                        dataType: "json",
                        data: {
                            q: request.term,
                            limit: 10,
                            appid: "0cf9d3890ebd408a5573cb606afe3d73",
                            lang: "ru"
                        },
                        success: function (data) {
                            response($.map(data, function (item) {
                                return {
                                    label: item.name + (item.state ? ", " + item.state : "") + ", " + item.country,
                                    value: item.name
                                };
                            }));
                        }
                    });
                },
                minLength: 2
            });
        });
    </script>
}
